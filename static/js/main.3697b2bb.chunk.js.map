{"version":3,"sources":["assets/mdiedricks_2020.pdf","components/Navbar.js","components/Footer.js","components/Home.js","components/Projects.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","name","type","id","to","htmlFor","Footer","resume","download","Home","Projects","About","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,6C,gKCI5B,SAASC,IACpB,OACI,6BACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,UACX,uBAAGC,KAAK,eACJ,yBAAKD,UAAU,YACX,8BAAUE,KAAK,UACf,0BAAMF,UAAU,SAAhB,uBAIR,2BAAOG,KAAK,WAAWC,GAAG,aAAaJ,UAAU,eAUjD,yBAAKA,UAAU,aACX,4BACI,4BAAI,kBAAC,IAAD,CAAMK,GAAG,eAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,YAGZ,2BAAOC,QAAQ,aAAaN,UAAU,oBAClC,8BAAM,8BAAUE,KAAK,sB,qBC9B9B,SAASK,IACpB,OACI,gCACI,yBAAKP,UAAU,aACX,yBAAKA,UAAU,UACX,uBAAGC,KAAK,qCAAsCD,UAAU,YACpD,8BAAUE,KAAK,UAEnB,uBAAGD,KAAK,0CAA2CD,UAAU,YACzD,8BAAUE,KAAK,mBAEnB,uBAAGD,KAAK,gCAAgCD,UAAU,YAC9C,8BAAUE,KAAK,iBAEnB,uBAAGD,KAAK,kCAAkCD,UAAU,YAChD,8BAAUE,KAAK,kBAEnB,uBAAGD,KAAMO,IAAQC,UAAQ,EAACT,UAAU,YAChC,8BAAUE,KAAK,sBClBxB,SAASQ,IACpB,OACI,yBAAKV,UAAU,SACX,yBAAKA,UAAU,aACf,2CCNG,SAASW,IACpB,OACI,yBAAKX,UAAU,QACX,yCCDG,SAASY,IACpB,OACI,yBAAKZ,UAAU,QACX,8CCoBGa,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKb,UAAU,OACb,kBAACD,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,eAAc,kBAACL,EAAD,OAChC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,aAAY,kBAACJ,EAAD,OAC9B,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAS,kBAACH,EAAD,QAE7B,kBAACL,EAAD,SCTYS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.3697b2bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mdiedricks_2020.31076923.pdf\";","import React from 'react'\nimport '../App.css';\nimport {Link} from 'react-router-dom';\n\nexport default function Navbar() {\n    return (\n        <nav>\n            <div className=\"container\">\n                <div className=\"navbar\">\n                    <a href='/mdiedricks'>\n                        <div className='nav-left'>\n                            <ion-icon name=\"skull\"></ion-icon>\n                            <span className=\"brand\">michael diedricks</span>\n                        </div>\n                    </a>\n\n                    <input type=\"checkbox\" id=\"nav-toggle\" className=\"nav-toggle\"/>\n                    \n                    {/* <div className='ham-right'>\n                        <ul>\n                            <li><Link to='/'>home</Link></li>\n                            <li><Link to='/projects'>projects</Link></li>\n                            <li><Link to='/about'>about</Link></li>\n                        </ul>\n                    </div> */}\n\n                    <div className='nav-right'>\n                        <ul>\n                            <li><Link to='/mdiedricks'>home</Link></li>\n                            <li><Link to='/projects'>projects</Link></li>\n                            <li><Link to='/about'>about</Link></li>\n                        </ul>\n                    </div>\n                    <label htmlFor=\"nav-toggle\" className=\"nav-toggle-label\">\n                        <span><ion-icon name=\"menu-outline\"></ion-icon></span>\n                    </label>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","import React from 'react'\nimport '../App.css';\nimport resume from '../assets/mdiedricks_2020.pdf'\n\nexport default function Footer() {\n    return (\n        <footer>\n            <div className='container'>                \n                <div className=\"footer\">\n                    <a href='mailto:michael.diedricks@gmail.com'  className='nav-item'>\n                        <ion-icon name=\"mail\"></ion-icon>\n                    </a>\n                    <a href='https://www.linkedin.com/in/mdiedricks/'  className='nav-item'>\n                        <ion-icon name=\"logo-linkedin\" ></ion-icon>\n                    </a>\n                    <a href='https://github.com/mdiedricks' className='nav-item'>\n                        <ion-icon name=\"logo-github\"></ion-icon>\n                    </a>\n                    <a href='https://twitter.com/mdiedricks_' className='nav-item'>\n                        <ion-icon name=\"logo-twitter\"></ion-icon>\n                    </a>\n                    <a href={resume} download className='nav-item'>\n                        <ion-icon name=\"document-text\"></ion-icon>\n                    </a>\n                </div>\n            </div>\n        </footer>\n    )\n}\n","import React from 'react'\nimport '../App.css';\n\n\nexport default function Home() {\n    return (\n        <div className=\"main \">\n            <div className=\"container\">\n            <h1>Home page</h1>\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Projects() {\n    return (\n        <div className=\"main\">\n            <h1>Projects</h1>\n        </div>\n    )\n}\n","import React from 'react'\nimport '../App.css';\n\n\nexport default function About() {\n    return (\n        <div className=\"main\">\n            <h1>About section</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n// Import components\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nimport Home from './components/Home'\nimport Projects from './components/Projects'\nimport About from './components/About'\n\nfunction App() {\n  return (\n    <Router >\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/mdiedricks\"><Home/></Route>\n          <Route exact path=\"/projects\"><Projects /></Route>\n          <Route exact path=\"/about\"><About /></Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}